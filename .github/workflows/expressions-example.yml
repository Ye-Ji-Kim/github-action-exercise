name: expressions-example
on: push
jobs:
  use-expressions:  # workflows support evaluating expressions with context variables.
    strategy:
      matrix:
        greeting: [Hello, Howdy, Hey]
    runs-on: ubuntu-latest
    env:
      json: '{"FAVORITE_FRUIT": "APPLE", "FAVORITE_COLOR": "BLUE"}'
    steps:
      - # can use ==, !=, <, <=, >, >=, &&, ||, ( ... )
        name: Print if 'Hello'
        if: ${{ matrix.greeting == 'Hello' }} # note the use of single quotes for string literal
        run: echo "greeting is Hello"
      -
        name: Print if starts with 'He'
        if: ${{ startsWith(matrix.greeting, 'He') }}
        run: echo "greeting starts with He"
      -
        name: Print if ends with 'y'
        if: ${{ endsWith(matrix.greeting, 'y') }}
        run: echo "greeting ends with y"
      -
        name: Print if contains 'ow'
        if: ${{ contains(matrix.greeting, 'ow') }}
        run: echo "greeting contains ow"
      -
        name: Print formatted greeting
        run: |
          echo "${{ format('{0} says {1}', github.actor, matrix.greeting) }}"
      -
        name: To JSON
        run: echo 'Job context is ${{ toJSON(job) }}' # toJSON() converts things to a pretty-printed JSON string
      -
        name: From JSON  # fromJSON() converts a string into a JSON object or value
        env: ${{ fromJSON(env.json) }}
        run: echo "I would like a ${FAVORITE_COLOR} ${FAVORITE_FRUIT}"
      -
        name: Success
        if: ${{ success() }} # success() returns true if no previous steps have failed or have been canceled.
        run: echo "Still running..."
      -
        name: Always
        if: ${{ always() }} # always() returns true no matter if a step failed or the workflow was cancelled.
        run: echo "You will always see this"
      -
        name: Canceled
        if: ${{ canceled() }}  # canceled() returns true if the workflow was canceled.
        run: echo "You canceled the workflow"
      -
        name: Failure
        if: ${{ failure() }}  # failure() returns true if any previous step failed.
        run: echo "Something went wrong..."
